include: ../../usaco.def
page: checklist_gold, basic_frame
    module: cpp

    &call open_In
        $call scan_Int, H,G
        $my int x_list[H+G], int y_list[H+G]
        $for i=0:H+G
            $call scan_int, x_list[i], y_list[i]

    $my $(T_vn2) Q
    Q.push_back({0,0})
    $for i=1:H+G
        $my $(T_map) M
        $foreach q in Q
            $my int j = q.first
            $my int cost = q.second
            $if j<H
                $if j+1<H
                    $call add, j, j+1
                $if H+i-1-j<H+G
                    $call add, j, H+i-1-j
            $else
                $if j+1<H+G
                    $call add, j, j+1
                $if i-1-(j-H)<H
                    $call add, j, i-1-(j-H)
        Q.clear()
        $foreach it in M
            # $dump i, it.first, it.second
            Q.push_back(it)

    n = Q[0].second
    &call open_Out
        $print $n


    subcode: add(i, j)
        $if $(j)!=H-1 || i==H+G-1
            $my int dx = x_list[$(j)]-x_list[$(i)]
            $my int dy = y_list[$(j)]-y_list[$(i)]
            $my int t = cost+dx*dx+dy*dy
            $if M.count($(j))==0
                M[$(j)]=t
            $elif M[$(j)]>t
                M[$(j)]=t
