include: ../../usaco.def
page: cownomics_gold, basic_frame
    module: cpp

    $global char s_spotty[500][500]
    $global char s_plain[500][500]
    $global N, M: int
    &call open_In
        $call scan_int, N, M
        $(for:spotty, plain)
            $for i=0:N
                $my s[M+1]
                fscanf(In, "%s", s)
                memcpy(s_$1[i], s, M)

    i1 = 1
    i2 = M
    $while i1<=i2
        i3 = (i1+i2)/2
        tn_flag = 0
        $for j=0:M
            $if j+i3<=M
                $if !match(j, i3)
                    tn_flag = 1
                    break
        $if tn_flag
            # sufficient
            i2 = i3 - 1
        $else
            i1 = i3 + 1
    count = i1
    $dump count

    &call open_Out
        $print $count




fncode: match(j, k)
    $my std::set<std::string> S
    $for i=0:N
        std::string s(s_spotty[i]+j, k);
        S.insert(s)

    $for i=0:N
        std::string s(s_plain[i]+j, k);
        $if S.count(s)>0
            return 1
    return 0
