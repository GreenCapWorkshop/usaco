include: ../../usaco.def
page: bcount_silver, basic_frame
    module: cpp
    # debug: 1

    &call open_In
        $global int N, int Q
        $call scan_int, N, Q
        $dump N, Q

        $my int L1[N], int L2[N], int L3[N]
        $my n_1=0, n_2=0, n_3=0
        $for i=0:N
            $my int id
            $call scan_int, id
            $(for:1,2,3)
                $case id==$1
                    L$1[n_$1++] = i+1

        $my int A[Q], int B[Q]
        $for i=0:Q
            $call scan_int, A[i], B[i]

    &call open_Out
        $for i=0:Q
            $(for:i in 1,2,3)
                i1 = bin_search(L$(i), n_$(i), A[i])
                i2 = bin_search(L$(i), n_$(i), B[i])
                $if L$(i)[i1]<A[i]
                    i1++
                $if L$(i)[i2]<=B[i]
                    i2++
                $if i2>i1
                    $print "%d-", i2-i1
                $else
                    $print "%d-", 0
                $(if:i=3)
                    $print "\n"
                $(else)
                    $print " -"


fncode: bin_search(int *L, n, int val)
    i1=0
    i2=n-1
    # return  a<=val<b
    $while i1<=i2
        $if L[i1]>=val
            return i1
        $if L[i2]<=val
            return i2
        i3 = (i1+i2)/2
        $if L[i3]==val
            return i3
        $elif L[i3]>val
            i2=i3-1
        $else
            i1=i3+1
    return i1


