include: ../../usaco.def
page: badmilk_bronze, basic_frame
    module: cpp

    &call open_In
        $local N, M, D, S: int
        $call scan_int, N, M, D, S
        $dump N, M, D, S

        $struct Drink 
            p, m, t: int
        $struct Sick
            p, t: int

        $my Drink drinks[D]
        $my Sick  sicks[S]
        
        $for i=0:D
            $call scan_int, drinks[i].p, drinks[i].m, drinks[i].t
        $for i=0:S
            $call scan_int, sicks[i].p, sicks[i].t

    $my int person[N+1] = {0}
    $for i=0:S
        person[sicks[i].p] = sicks[i].t

    $my int milk[M+1] = {0}
    &call std_sort, drinks, D, Drink
        return a.p<b.p || (a.p==b.p && a.m<b.m)

    $my int last_p = 0
    $my int last_m = 0
    $for i=0:D
        $my int p = drinks[i].p
        $my int m = drinks[i].m
        $my int sick_t = person[p]
        $if sick_t>0 && drinks[i].t<sick_t
            $if p!=last_p || m!=last_m
                milk[m]++
                last_p = p
                last_m = m

    $for i=1:M+1
        $if milk[i] == S
            milk[i] = 101 # sentinel for bad
            break

    $my int cnt=S
    $for i=0:D
        $my int p = drinks[i].p
        $if person[p]==0
            $if milk[drinks[i].m]==101
                person[p]=101
                cnt++

    $dump cnt
    &call open_Out
        $print $cnt

