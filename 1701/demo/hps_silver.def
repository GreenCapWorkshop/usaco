include: ../../usaco.def
page: hps_silver, basic_frame
    module: cpp

    $local int N
    &call open_In
        $call scan_int, N
        $dump N

        # P > H > S
        $my int A[N]

        $for i=0:N
            $my char s[2]
            fscanf(In, "%s", s)
            A[i] = get_phs(s[0])
            # $dump i, A[i]

    $my int stats_front[3]={0,0,0}
    $my int stats_back[3]={0,0,0}
    $for i=0:N
        stats_back[A[i]]++

    n_max = 0
    $for i=0:N
        n = get_max(stats_front) + get_max(stats_back)
        $if n_max < n
            n_max = n
        stats_front[A[i]]++
        stats_back[A[i]]--
    $dump n_max
    &call open_Out
        $print $n_max

fncode: get_phs(char c): int
    $if c=='P'
        return 0
    $elif c=='H'
        return 1
    $else
        return 2

fncode: get_max(int stats[3]): int
    $if stats[0]>=stats[1] && stats[0]>=stats[2]
        return stats[0]
    $elif stats[1]>=stats[0] && stats[1]>=stats[2]
        return stats[1]
    $else
        return stats[2]
