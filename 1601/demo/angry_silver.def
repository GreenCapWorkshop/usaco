include: ../../usaco.def
page: angry_silver, basic_frame
    module: cpp

    $my N, K: int
    &call open_In
        $call scan_int, N, K
        
        $my int x[N]
        $for i=0:N
            $call scan_int, x[i]
        &call std_sort, x, N, int
            return a<b

    $(if:1)
        $call b_search_R
    $(else)
        R = 11
        $call try_R
    $dump R
    &call open_Out
        $print $R

    subcode: try_R
        b_success=false
        j = 0
        $for i=0:K
            # $dump(b_search) x[j], N-j, x[j]+R*2
            j += b_search(x+j, N-j, x[j]+R*2)
            # $dump(try_R) i, j, x[j]
            $if j>N-1
                b_success = true
                break

    subcode: b_search_R
        R1 = 0
        R2 = 50000
        $while R1<=R2
            R = (R1+R2)/2
            $call try_R
            # $dump R1, R2, R, b_success
            $if b_success
                R2=R-1
            $else
                R1=R+1
        R = R1

fncode: b_search(int *x, int N, int y)
    i1=0
    i2=N-1
    $if x[i2]<y
        return i2+1
    $while i1<=i2
        i3 = (i1+i2)/2
        $if x[i3]==y
            return i3+1
        $elif x[i3]<y
            i1=i3+1
        $else
            i2=i3-1
    return i1


