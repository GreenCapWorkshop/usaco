include: ../../usaco.def
page: mootube_gold, basic_frame
    module: cpp

    &call open_In
        $call scan_Int, N, Q
        $my int A[N-1], int B[N-1], int R[N-1]
        $for i=0:N-1
            $call scan_int, A[i], B[i], R[i]
            A[i]--
            B[i]--
        $my int V[Q], int K[Q]
        $for i=0:Q
            $call scan_int, K[i], V[i]
            V[i]--
    # ---- Sort Q --------------------------- 
    $my int P[Q]
    $for i=0:Q
        P[i]=i
    &call std_sort, P, Q, int
        return K[a] > K[b]
    # ---- Sort edges --------------------------- 
    $my int E[N-1]
    $for i=0:N-1
        E[i]=i
    &call std_sort, E, N-1, int
        return R[a] > R[b]
    i_edge_start=0
    n_edges = N-1
    # ---- Data structure ----------------------
    $my int region_sizes[N]
    $for i=0:N
        region_sizes[i]=1
    $global int * pointers
    pointers = new int[N]
    $for i=0:N
        pointers[i]=i
    # ---- Do it -------------------------- 
    $my int Ans[Q]
    $for i_q2=0:Q
        i_q = P[i_q2]

        $while i_edge_start < n_edges
            i = E[i_edge_start]

            $if R[i]>=K[i_q]
                i_a = find_root(A[i])
                i_b = find_root(B[i])
                region_sizes[i_a] += region_sizes[i_b]
                pointers[i_b] = i_a

                i_edge_start++
            $else
                break

        Ans[i_q] = region_sizes[find_root(V[i_q])] -1
    # --------------------------------------- 
    &call open_Out
        $for i_q=0:Q
            $print "%d", Ans[i_q]


#---------------------------------------- 
fncode: find_root(int i): int
    $while pointers[i]!=i
        i=pointers[i]
    return i
